name: Cloudflare Pages Deploy Notification

on:
  push:
    branches: [prod-fix] # Replace with your branch name

jobs:
  notify-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for deployment and get status
        id: deployment-status
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          # Function to get deployment by commit SHA
          get_deployment() {
            curl -s -H "Authorization: Bearer $CF_API_TOKEN" \
              "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/$CF_PROJECT_NAME/deployments" \
              | jq -r --arg sha "$GITHUB_SHA" '.result[] | select(.deployment_trigger.metadata.commit_hash == $sha) | .id'
          }
          
          # Function to get deployment status
          get_deployment_status() {
            local deployment_id=$1
            curl -s -H "Authorization: Bearer $CF_API_TOKEN" \
              "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/$CF_PROJECT_NAME/deployments/$deployment_id" \
              | jq -r '.result.latest_stage.status'
          }
          
          # Function to get build log
          get_build_log() {
            local deployment_id=$1
            curl -s -H "Authorization: Bearer $CF_API_TOKEN" \
              "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/$CF_PROJECT_NAME/deployments/$deployment_id/history/logs" \
              | jq -r '.result.data[].line' | head -100
          }
          
          echo "Waiting for Cloudflare Pages deployment to start..."
          
          # Wait up to 2 minutes for deployment to appear
          deployment_id=""
          for i in {1..24}; do
            deployment_id=$(get_deployment)
            if [ -n "$deployment_id" ]; then
              echo "Found deployment: $deployment_id"
              break
            fi
            echo "Waiting for deployment to start... ($i/24)"
            sleep 5
          done
          
          if [ -z "$deployment_id" ]; then
            echo "status=timeout" >> $GITHUB_OUTPUT
            echo "message=Deployment not found within 2 minutes" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Wait for deployment to complete (max 10 minutes)
          echo "Waiting for deployment to complete..."
          for i in {1..60}; do
            status=$(get_deployment_status $deployment_id)
            echo "Current status: $status"
            
            if [ "$status" = "success" ]; then
              echo "status=success" >> $GITHUB_OUTPUT
              echo "deployment_id=$deployment_id" >> $GITHUB_OUTPUT
              exit 0
            elif [ "$status" = "failure" ]; then
              echo "status=failure" >> $GITHUB_OUTPUT
              echo "deployment_id=$deployment_id" >> $GITHUB_OUTPUT
              
              # Get build log for failures
              echo "Getting build log..."
              log=$(get_build_log $deployment_id)
              # Escape newlines and quotes for JSON
              log_escaped=$(echo "$log" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
              echo "log=$log_escaped" >> $GITHUB_OUTPUT
              exit 0
            fi
            
            sleep 10
          done
          
          # Timeout after 10 minutes
          echo "status=timeout" >> $GITHUB_OUTPUT
          echo "message=Deployment took longer than 10 minutes" >> $GITHUB_OUTPUT

      - name: Send success notification to Slack
        if: steps.deployment-status.outputs.status == 'success'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"✅ *Cloudflare Pages Deploy Success*\n*Branch:* ${{ github.ref_name }}\n*Commit:* <${{ github.event.head_commit.url }}|${{ github.event.head_commit.message }}>\n*Deployment:* https://dash.cloudflare.com/${{ secrets.CF_ACCOUNT_ID }}/pages/view/${{ secrets.CF_PROJECT_NAME }}/${{ steps.deployment-status.outputs.deployment_id }}\"
                }
              }
            ]
          }" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send failure notification to Slack
        if: steps.deployment-status.outputs.status == 'failure'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"❌ *Cloudflare Pages Deploy Failed*\n*Branch:* ${{ github.ref_name }}\n*Commit:* <${{ github.event.head_commit.url}}|${{ github.event.head_commit.message }}>\"
                }
              },
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"*Build Log:*\n\`\`\`\n${{ steps.deployment-status.outputs.log }}\n\`\`\`\"
                }
              }
            ]
          }" \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send timeout notification to Slack
        if: steps.deployment-status.outputs.status == 'timeout'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"⏰ *Cloudflare Pages Deploy Timeout*\n*Branch:* ${{ github.ref_name }}\n*Commit:* <${{ github.event.head_commit.url}}|${{ github.event.head_commit.message }}>\n*Issue:* ${{ steps.deployment-status.outputs.message }}\"
                }
              }
            ]
          }" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
